<launch>

  <arg name="gzname" default="gazebo"/>
  <param name="/use_sim_time" type="bool" value="true"/>
  <node name="gazebo" pkg="mit_drcsim_scripts" type="run_$(arg gzname)" args="$(find mit_drcsim_scripts)/worlds/atlas_test_world.world"/>

  <!-- Robot Description -->
  <param name="robot_description" textfile="$(find mit_drcsim_scripts)/models/mit_robot_PnC/model.urdf"/>
<!--  <param name="robot_description" textfile="$(find mit_drcsim_scripts)/models/mit_robot/model.urdf"/> -->

  <!-- Controller Manager -->
  <include file="$(find pr2_controller_manager)/controller_manager.launch" />

  <!-- Fake Calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
        args="pub /calibrated std_msgs/Bool true" />

  <!-- TF Buffer Server (mfallon: i dont think we need this -->
  <node pkg="tf2_ros" type="buffer_server" name="tf2_buffer_server" output="screen">
    <param name="buffer_size" value="1200.0"/>
  </node>

<!-- Drake -->
  <!-- Position Controllers -->
  <rosparam file="$(find mit_drcsim_scripts)/models/mit_robot_PnC/control/position_controllers.yaml" command="load" />
  <!-- finger controllers omitted
  <rosparam file="$(find sandia_hand_left)/ros/position_controllers.yaml" command="load" />
  <rosparam file="$(find sandia_hand_right)/ros/position_controllers.yaml" command="load" />
  <node name="sandia_hand_controllers_spawner"
        pkg="pr2_controller_manager" type="spawner" output="screen"
        args="DASHDASHwait-for=/calibrated r_f0_j0_position_controller r_f0_j1_position_controller r_f0_j2_position_controller r_f1_j0_position_controller r_f1_j1_position_controller r_f1_j2_position_controller r_f2_j0_position_controller r_f2_j1_position_controller r_f2_j2_position_controller r_f3_j0_position_controller r_f3_j1_position_controller r_f3_j2_position_controller l_f0_j0_position_controller l_f0_j1_position_controller l_f0_j2_position_controller l_f1_j0_position_controller l_f1_j1_position_controller l_f1_j2_position_controller l_f2_j0_position_controller l_f2_j1_position_controller l_f2_j2_position_controller l_f3_j0_position_controller l_f3_j1_position_controller l_f3_j2_position_controller" />
  -->
  <!-- Controllers that come up started -->
  <node name="atlas_controllers_spawner"
        pkg="pr2_controller_manager" type="spawner" output="screen"
        args="--wait-for=/calibrated l_arm_elx_position_controller r_arm_elx_position_controller l_arm_ely_position_controller r_arm_ely_position_controller l_arm_mwx_position_controller r_arm_mwx_position_controller l_arm_shx_position_controller r_arm_shx_position_controller l_arm_usy_position_controller r_arm_usy_position_controller l_arm_uwy_position_controller r_arm_uwy_position_controller l_leg_kny_position_controller r_leg_kny_position_controller l_leg_lax_position_controller r_leg_lax_position_controller l_leg_lhy_position_controller r_leg_lhy_position_controller l_leg_mhx_position_controller r_leg_mhx_position_controller l_leg_uay_position_controller r_leg_uay_position_controller l_leg_uhz_position_controller r_leg_uhz_position_controller neck_ay_position_controller back_lbz_position_controller back_mby_position_controller back_ubx_position_controller" />

<!-- Before started using drake -->
<!-- Default: -->
<!--  <rosparam command="load" file="$(find mit_drcsim_scripts)/models/mit_robot/ros/whole_body_trajectory_controller.yaml" />  -->
<!--  <rosparam command="load" file="$(find mit_drcsim_scripts)/models/mit_robot/ros/lower_body_trajectory_controller.yaml" /> --> 
  <!-- Controllers that come up started -->
<!--  <node name="atlas_controller_spawner"
        pkg="pr2_controller_manager" type="spawner" output="screen"
        args="DASHDASHwait-for=/calibrated atlas_controller" />
-->

</launch>
  

