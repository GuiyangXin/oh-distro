This is the code base for the DRC project. 

0. Install LCM v0.9
===============
25Oct2012: A system wide install of LCM is still required for DRAKE. You should install LCM system wide for now for this reason. 
- Note that it is available to install at:
drc/software/externals/lcm_pod

wget https://lcm.googlecode.com/files/lcm-0.9.1.tar.gz
tar -xzf lcm-0.9.1.tar.gz
cd lcm-0.9.1
./configure
make
sudo make install
sudo ldconfig

1. DEPENDENCIES
===============
On a Debian/Ubuntu system, the following apt packages should be sufficient:
Definitely required:
cmake 
build-essential 
libglib2.0-dev 
openjdk-6-jdk 
python-dev 
libgsl0-dev
gsl-bin
libusb-1.0-0-dev
libgtk2.0-dev
freeglut3-dev
python-gtk2
libgtk2.0-dev
libvtk5-dev
gtk-doc-tools
libqhull-dev
libtinyxml-dev

libjpeg8-dev (installing this may break ROS electric, which wants libjpeg-dev instead)

To be confirmed: Boost 1.46 and 1.48 are available. we seem to need 1.46 for ROS:
libboost-dev (may not be necessary, libboost1.48-all-dev might be all thats necessary...)
boost1.48-dev (may not be necessary, libboost1.48-all-dev might be all thats necessary...)
libboost-dev (may not be necessary, libboost1.48-all-dev might be all thats necessary...)
libboost1.48-all-dev

>>>>> In one command <<<<<<
sudo apt-get install cmake build-essential libglib2.0-dev openjdk-6-jdk python-dev  libgsl0-dev gsl-bin libusb-1.0-0-dev libgtk2.0-dev freeglut3-dev python-gtk2 libgtk2.0-dev libvtk5-dev gtk-doc-tools libqhull-dev libtinyxml-dev



(OpenNI: required only for the externals/kinect):
sudo add-apt-repository ppa:v-launchpad-jochen-sprickerhof-de/pcl
sudo apt-get update
sudo apt-get install openni-dev ps-engine 
TODO: make openni into a pod within the repo

Probably required: (to be confirmed)
    mesa-common-dev
    libgl1-mesa-dev
    libglu1-mesa-dev
    ant
    libsuitesparse-dev

(This list may not be complete. See the individual README files in
the third party pod collections for newer dependencies.)

2. INSTALL pods tool from sourceforge (optional)
===================
http://sourceforge.net/p/pods/wiki/PodsTool/
$ svn checkout svn://svn.code.sf.net/p/pods/svn pods
$ cd pods
$ sudo python setup.py install

3. BUILD
========
$ cd ~/drc/software/externals
$ make    (takes about 30mins)
$ cd ~/drc/software/
$ make  

4. USEFUL .BASHRC COMMANDS
==========================
alias cddrc='cd $HOME/drc/software'
PATH=$PATH:$HOME/drc/software/build/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/drc/software/build/lib/
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$HOME/drc/software/build/lib/pkgconfig/
export CLASSPATH=$CLASSPATH:/usr/local/share/java/lcm.jar:$HOME/drc/software/build/share/java/lcmtypes_drc_lcmtypes.jar

5. ENABLE LARGE UDP PACKETS
===========================
http://lcm.googlecode.com/svn/www/reference/lcm/multicast.html
For Ubuntu, add these lines to "/etc/sysctl.conf":
    net.core.rmem_max=2097152
    net.core.rmem_default=2097152
(Requires a reboot to take effect)

6. drc sim on wiki followed by...
=============================================
sudo apt-get install ros-fuerte-image-pipeline
make -C atlas_gazebo_msgs
make -C keyboard_teleop
make -C ROS2LCM_translator

7. DRAKE (LOCOMOTION GROUP CODEBASE)
====================================
See:
https://groups.csail.mit.edu/rvsn/wiki/index.php?title=Software_Notes#Drake

=============== HACKS/ISSUES ===============
[ these should be properly fixed]
1. flann installs to build/lib64 and not build/lib
PCL cant find it, so it can build. As a fix, I have it copy over to lib on build

2. OpenGL does not install properly, which causes repeated errors of the form:
No rule to make target `/usr/lib/x86_64-linux-gnu/libGL.so

To fix this, we just need to repair the symlinks like this:
sudo rm /usr/lib/x86_64-linux-gnu/libGL.so
sudo ln -s /usr/lib/libGL.so.1 /usr/lib/x86_64-linux-gnu/libGL.so


