   1               		.file	"fifo.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 440               		.section	.text.fifo_init,"ax",@progbits
 442               	.global	fifo_init
 444               	fifo_init:
   1:fifo.c        **** /************************************************************************/
   2:fifo.c        **** /* XBoot Extensible AVR Bootloader                                      */
   3:fifo.c        **** /*                                                                      */
   4:fifo.c        **** /* FT245/2232 asynchronous Fifo Module                                  */
   5:fifo.c        **** /*                                                                      */
   6:fifo.c        **** /* fifo.c                                                               */
   7:fifo.c        **** /*                                                                      */
   8:fifo.c        **** /* Uwe Bonnes bon@elektron.ikp.physik.tu-darmstadt.de                   */
   9:fifo.c        **** /*                                                                      */
  10:fifo.c        **** /* Copyright (c) 2011 Uwe Bonnes                                        */
  11:fifo.c        **** /*                                                                      */
  12:fifo.c        **** /* Permission is hereby granted, free of charge, to any person          */
  13:fifo.c        **** /* obtaining a copy of this software and associated documentation       */
  14:fifo.c        **** /* files(the "Software"), to deal in the Software without restriction,  */
  15:fifo.c        **** /* including without limitation the rights to use, copy, modify, merge, */
  16:fifo.c        **** /* publish, distribute, sublicense, and/or sell copies of the Software, */
  17:fifo.c        **** /* and to permit persons to whom the Software is furnished to do so,    */
  18:fifo.c        **** /* subject to the following conditions:                                 */
  19:fifo.c        **** /*                                                                      */
  20:fifo.c        **** /* The above copyright notice and this permission notice shall be       */
  21:fifo.c        **** /* included in all copies or substantial portions of the Software.      */
  22:fifo.c        **** /*                                                                      */
  23:fifo.c        **** /* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,      */
  24:fifo.c        **** /* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF   */
  25:fifo.c        **** /* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND                */
  26:fifo.c        **** /* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  */
  27:fifo.c        **** /* BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN   */
  28:fifo.c        **** /* ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN    */
  29:fifo.c        **** /* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE     */
  30:fifo.c        **** /* SOFTWARE.                                                            */
  31:fifo.c        **** /*                                                                      */
  32:fifo.c        **** /************************************************************************/
  33:fifo.c        **** 
  34:fifo.c        **** #include "fifo.h"
  35:fifo.c        **** /* As discussed in
  36:fifo.c        ****  * http://www.avrfreaks.net/index.php?name=PNphpBB2&file=viewtopic&t=41613
  37:fifo.c        ****  * Accessing a bitrev table in bootloader flash will not be faster, as
  38:fifo.c        ****  * a our character needs to be added to the table converted to a far address
  39:fifo.c        ****  * and probaly also the NVM needs to be cared about
  40:fifo.c        ****  */
  41:fifo.c        **** 
  42:fifo.c        **** #define REVERSE(a) do                     \
  43:fifo.c        **** {                                         \
  44:fifo.c        ****   a=((a>>1)&0x55)|((a<<1)&0xaa);          \
  45:fifo.c        ****   a=((a>>2)&0x33)|((a<<2)&0xcc);          \
  46:fifo.c        ****   asm volatile("swap %0":"=r"(a):"0"(a)); \
  47:fifo.c        **** } while(0)
  48:fifo.c        **** 
  49:fifo.c        **** // Initialize FIFO
  50:fifo.c        **** void __attribute__ ((always_inline)) fifo_init(void)
  51:fifo.c        **** {
 446               	.LM0:
 447               	.LFBB1:
 448               	/* prologue: function */
 449               	/* frame size = 0 */
 450               	/* stack size = 0 */
 451               	.L__stack_usage = 0
  52:fifo.c        **** #ifdef __AVR_XMEGA__
  53:fifo.c        ****         FIFO_DATA_PORT.DIR = 0;
 453               	.LM1:
 454 0000 1092 4006 		sts 1600,__zero_reg__
  54:fifo.c        ****         FIFO_CTL_PORT.OUTSET = FIFO_RD_N_bm | FIFO_WR_N_bm;
 456               	.LM2:
 457 0004 E0E6      		ldi r30,lo8(1632)
 458 0006 F6E0      		ldi r31,hi8(1632)
 459 0008 83E0      		ldi r24,lo8(3)
 460 000a 8583      		std Z+5,r24
  55:fifo.c        ****         FIFO_CTL_PORT.DIRSET = FIFO_RD_N_bm | FIFO_WR_N_bm;
 462               	.LM3:
 463 000c 8183      		std Z+1,r24
 464               	/* epilogue start */
  56:fifo.c        **** #else // __AVR_XMEGA__
  57:fifo.c        ****         FIFO_DATA_PORT_DDR = 0;
  58:fifo.c        ****         FIFO_DATA_PORT |= (FIFO_RD_N_bm | FIFO_WR_N_bm);
  59:fifo.c        ****         FIFO_CTL_PORT_DDR |= (FIFO_RD_N_bm | FIFO_WR_N_bm);
  60:fifo.c        **** #endif // __AVR_XMEGA__
  61:fifo.c        **** }
 466               	.LM4:
 467 000e 0895      		ret
 469               	.Lscope1:
 470               		.section	.text.fifo_deinit,"ax",@progbits
 472               	.global	fifo_deinit
 474               	fifo_deinit:
  62:fifo.c        **** 
  63:fifo.c        **** // Shut down UART
  64:fifo.c        **** void __attribute__ ((always_inline)) fifo_deinit(void)
  65:fifo.c        **** {
 476               	.LM5:
 477               	.LFBB2:
 478               	/* prologue: function */
 479               	/* frame size = 0 */
 480               	/* stack size = 0 */
 481               	.L__stack_usage = 0
  66:fifo.c        **** #ifdef __AVR_XMEGA__
  67:fifo.c        ****         FIFO_DATA_PORT.DIR = 0xff;
 483               	.LM6:
 484 0000 E0E4      		ldi r30,lo8(1600)
 485 0002 F6E0      		ldi r31,hi8(1600)
 486 0004 8FEF      		ldi r24,lo8(-1)
 487 0006 8083      		st Z,r24
  68:fifo.c        ****         FIFO_DATA_PORT.OUTCLR = 0xff;
 489               	.LM7:
 490 0008 8683      		std Z+6,r24
  69:fifo.c        ****         FIFO_CTL_PORT.OUTCLR = FIFO_RD_N_bm | FIFO_WR_N_bm;
 492               	.LM8:
 493 000a E0E6      		ldi r30,lo8(1632)
 494 000c F6E0      		ldi r31,hi8(1632)
 495 000e 83E0      		ldi r24,lo8(3)
 496 0010 8683      		std Z+6,r24
  70:fifo.c        ****         FIFO_CTL_PORT.DIRCLR = FIFO_RD_N_bm | FIFO_WR_N_bm;
 498               	.LM9:
 499 0012 8283      		std Z+2,r24
 500               	/* epilogue start */
  71:fifo.c        **** #else // __AVR_XMEGA__
  72:fifo.c        ****         FIFO_DATA_PORT_DDR = 0xff;
  73:fifo.c        ****         FIFO_DATA_PORT= 0x00;
  74:fifo.c        ****         FIFO_DATA_PORT &= ~(FIFO_RD_N_bm | FIFO_WR_N_bm);
  75:fifo.c        ****         FIFO_CTL_PORT_DDR &= ~(FIFO_RD_N_bm | FIFO_WR_N_bm);
  76:fifo.c        **** #endif // __AVR_XMEGA__
  77:fifo.c        **** }
 502               	.LM10:
 503 0014 0895      		ret
 505               	.Lscope2:
 506               		.section	.text.fifo_cur_char,"ax",@progbits
 508               	.global	fifo_cur_char
 510               	fifo_cur_char:
  78:fifo.c        **** 
  79:fifo.c        **** uint8_t __attribute__ ((always_inline)) fifo_cur_char(void)
  80:fifo.c        **** {
 512               	.LM11:
 513               	.LFBB3:
 514               	/* prologue: function */
 515               	/* frame size = 0 */
 516               	/* stack size = 0 */
 517               	.L__stack_usage = 0
  81:fifo.c        ****     uint8_t ret;
  82:fifo.c        **** #ifdef __AVR_XMEGA__
  83:fifo.c        ****     FIFO_CTL_PORT.OUTCLR = FIFO_RD_N_bm;
 519               	.LM12:
 520 0000 E0E6      		ldi r30,lo8(1632)
 521 0002 F6E0      		ldi r31,hi8(1632)
 522 0004 22E0      		ldi r18,lo8(2)
 523 0006 2683      		std Z+6,r18
  84:fifo.c        ****     ret = FIFO_DATA_PORT.IN;
 525               	.LM13:
 526 0008 A0E4      		ldi r26,lo8(1600)
 527 000a B6E0      		ldi r27,hi8(1600)
 528 000c 1896      		adiw r26,8
 529 000e 8C91      		ld r24,X
 530 0010 1897      		sbiw r26,8
  85:fifo.c        ****     #ifdef  FIFO_BIT_REVERSE
  86:fifo.c        ****     REVERSE(ret);
 532               	.LM14:
 533 0012 982F      		mov r25,r24
 534 0014 990F      		lsl r25
 535 0016 9A7A      		andi r25,lo8(-86)
 536 0018 8695      		lsr r24
 537 001a 8575      		andi r24,lo8(85)
 538 001c 982B      		or r25,r24
 539 001e 892F      		mov r24,r25
 540 0020 880F      		lsl r24
 541 0022 880F      		lsl r24
 542 0024 8C7C      		andi r24,lo8(-52)
 543 0026 9695      		lsr r25
 544 0028 9695      		lsr r25
 545 002a 9373      		andi r25,lo8(51)
 546 002c 892B      		or r24,r25
 547               	/* #APP */
 548               	 ;  86 "fifo.c" 1
 549 002e 8295      		swap r24
 550               	 ;  0 "" 2
  87:fifo.c        ****     #endif
  88:fifo.c        ****     FIFO_CTL_PORT.OUTSET = FIFO_RD_N_bm;
 552               	.LM15:
 553               	/* #NOAPP */
 554 0030 2583      		std Z+5,r18
 555               	/* epilogue start */
  89:fifo.c        **** #else // __AVR_XMEGA__
  90:fifo.c        ****     FIFO_CTL_PORT &= ~FIFO_RD_N_bm;
  91:fifo.c        ****     ret = FIFO_DATA_PORT_PIN;
  92:fifo.c        ****     #ifdef  FIFO_BIT_REVERSE
  93:fifo.c        ****     REVERSE(ret);
  94:fifo.c        ****     #endif
  95:fifo.c        ****     FIFO_CTL_PORT |= FIFO_RD_N_bm;
  96:fifo.c        **** #endif // __AVR_XMEGA__
  97:fifo.c        ****     return ret;
  98:fifo.c        **** }
 557               	.LM16:
 558 0032 0895      		ret
 560               	.Lscope3:
 561               		.section	.text.fifo_send_char,"ax",@progbits
 564               	.global	fifo_send_char
 566               	fifo_send_char:
  99:fifo.c        **** 
 100:fifo.c        **** void __attribute__ ((always_inline))  fifo_send_char(uint8_t c)
 101:fifo.c        **** {
 568               	.LM17:
 569               	.LFBB4:
 570               	/* prologue: function */
 571               	/* frame size = 0 */
 572               	/* stack size = 0 */
 573               	.L__stack_usage = 0
 102:fifo.c        **** #ifdef __AVR_XMEGA__
 103:fifo.c        ****     if ((FIFO_CTL_PORT.IN & FIFO_TXE_N_bm) !=  FIFO_TXE_N_bm)
 575               	.LM18:
 576 0000 E0E6      		ldi r30,lo8(1632)
 577 0002 F6E0      		ldi r31,hi8(1632)
 578 0004 9091 6806 		lds r25,1640
 579 0008 92FD      		sbrc r25,2
 580 000a 00C0      		rjmp .L4
 104:fifo.c        ****     {
 105:fifo.c        ****         FIFO_DATA_PORT.DIR = 0xff;
 582               	.LM19:
 583 000c 2FEF      		ldi r18,lo8(-1)
 584 000e 2093 4006 		sts 1600,r18
 106:fifo.c        ****         #ifdef  FIFO_BIT_REVERSE
 107:fifo.c        ****         REVERSE(c);
 586               	.LM20:
 587 0012 982F      		mov r25,r24
 588 0014 990F      		lsl r25
 589 0016 9A7A      		andi r25,lo8(-86)
 590 0018 8695      		lsr r24
 591 001a 8575      		andi r24,lo8(85)
 592 001c 982B      		or r25,r24
 593 001e 892F      		mov r24,r25
 594 0020 880F      		lsl r24
 595 0022 880F      		lsl r24
 596 0024 8C7C      		andi r24,lo8(-52)
 597 0026 9695      		lsr r25
 598 0028 9695      		lsr r25
 599 002a 9373      		andi r25,lo8(51)
 600 002c 892B      		or r24,r25
 601               	/* #APP */
 602               	 ;  107 "fifo.c" 1
 603 002e 8295      		swap r24
 604               	 ;  0 "" 2
 108:fifo.c        ****         #endif
 109:fifo.c        ****         FIFO_DATA_PORT.OUT = c;
 606               	.LM21:
 607               	/* #NOAPP */
 608 0030 A0E4      		ldi r26,lo8(1600)
 609 0032 B6E0      		ldi r27,hi8(1600)
 610 0034 1496      		adiw r26,4
 611 0036 8C93      		st X,r24
 612 0038 1497      		sbiw r26,4
 110:fifo.c        ****         FIFO_DATA_PORT.DIR = 0xff;
 614               	.LM22:
 615 003a 2093 4006 		sts 1600,r18
 111:fifo.c        ****         FIFO_CTL_PORT.OUTCLR = FIFO_WR_N_bm;
 617               	.LM23:
 618 003e 81E0      		ldi r24,lo8(1)
 619 0040 8683      		std Z+6,r24
 112:fifo.c        ****         FIFO_DATA_PORT.DIR = 0;
 621               	.LM24:
 622 0042 1092 4006 		sts 1600,__zero_reg__
 113:fifo.c        ****         FIFO_CTL_PORT.OUTSET = FIFO_WR_N_bm;
 624               	.LM25:
 625 0046 8583      		std Z+5,r24
 626               	.L4:
 627 0048 0895      		ret
 629               	.Lscope4:
 630               		.section	.text.fifo_send_char_blocking,"ax",@progbits
 633               	.global	fifo_send_char_blocking
 635               	fifo_send_char_blocking:
 114:fifo.c        ****     }
 115:fifo.c        **** #else // __AVR_XMEGA__
 116:fifo.c        ****     if ((FIFO_CTL_PORT_PIN & FIFO_TXE_N_bm) !=  FIFO_TXE_N_bm)
 117:fifo.c        ****     {
 118:fifo.c        ****         FIFO_DATA_PORT_DDR = 0xff;
 119:fifo.c        ****         #ifdef  FIFO_BIT_REVERSE
 120:fifo.c        ****         REVERSE(c);
 121:fifo.c        ****         #endif
 122:fifo.c        ****         FIFO_DATA_PORT = c;
 123:fifo.c        ****         FIFO_DATA_PORT_DDR = 0xff;
 124:fifo.c        ****         FIFO_CTL_PORT &= ~FIFO_WR_N_bm;
 125:fifo.c        ****         FIFO_DATA_PORT_DDR = 0;
 126:fifo.c        ****         FIFO_CTL_PORT |= FIFO_WR_N_bm;
 127:fifo.c        ****     }
 128:fifo.c        **** #endif // __AVR_XMEGA__
 129:fifo.c        **** }
 130:fifo.c        **** 
 131:fifo.c        **** void __attribute__ ((always_inline))  fifo_send_char_blocking(uint8_t c)
 132:fifo.c        **** {
 637               	.LM26:
 638               	.LFBB5:
 639               	/* prologue: function */
 640               	/* frame size = 0 */
 641               	/* stack size = 0 */
 642               	.L__stack_usage = 0
 643               	.L7:
 133:fifo.c        **** #ifdef __AVR_XMEGA__
 134:fifo.c        ****     while (FIFO_CTL_PORT.IN & FIFO_TXE_N_bm)
 645               	.LM27:
 646 0000 E0E6      		ldi r30,lo8(1632)
 647 0002 F6E0      		ldi r31,hi8(1632)
 648 0004 9091 6806 		lds r25,1640
 649 0008 92FD      		sbrc r25,2
 650 000a 00C0      		rjmp .L7
 651               	.LBB4:
 652               	.LBB5:
 103:fifo.c        ****     if ((FIFO_CTL_PORT.IN & FIFO_TXE_N_bm) !=  FIFO_TXE_N_bm)
 654               	.LM28:
 655 000c 9091 6806 		lds r25,1640
 656 0010 92FD      		sbrc r25,2
 657 0012 00C0      		rjmp .L6
 105:fifo.c        ****         FIFO_DATA_PORT.DIR = 0xff;
 659               	.LM29:
 660 0014 2FEF      		ldi r18,lo8(-1)
 661 0016 2093 4006 		sts 1600,r18
 107:fifo.c        ****         REVERSE(c);
 663               	.LM30:
 664 001a 982F      		mov r25,r24
 665 001c 990F      		lsl r25
 666 001e 9A7A      		andi r25,lo8(-86)
 667 0020 8695      		lsr r24
 668 0022 8575      		andi r24,lo8(85)
 669 0024 982B      		or r25,r24
 670 0026 892F      		mov r24,r25
 671 0028 880F      		lsl r24
 672 002a 880F      		lsl r24
 673 002c 8C7C      		andi r24,lo8(-52)
 674 002e 9695      		lsr r25
 675 0030 9695      		lsr r25
 676 0032 9373      		andi r25,lo8(51)
 677 0034 892B      		or r24,r25
 678               	/* #APP */
 679               	 ;  107 "fifo.c" 1
 680 0036 8295      		swap r24
 681               	 ;  0 "" 2
 109:fifo.c        ****         FIFO_DATA_PORT.OUT = c;
 683               	.LM31:
 684               	/* #NOAPP */
 685 0038 A0E4      		ldi r26,lo8(1600)
 686 003a B6E0      		ldi r27,hi8(1600)
 687 003c 1496      		adiw r26,4
 688 003e 8C93      		st X,r24
 689 0040 1497      		sbiw r26,4
 110:fifo.c        ****         FIFO_DATA_PORT.DIR = 0xff;
 691               	.LM32:
 692 0042 2093 4006 		sts 1600,r18
 111:fifo.c        ****         FIFO_CTL_PORT.OUTCLR = FIFO_WR_N_bm;
 694               	.LM33:
 695 0046 81E0      		ldi r24,lo8(1)
 696 0048 8683      		std Z+6,r24
 112:fifo.c        ****         FIFO_DATA_PORT.DIR = 0;
 698               	.LM34:
 699 004a 1092 4006 		sts 1600,__zero_reg__
 113:fifo.c        ****         FIFO_CTL_PORT.OUTSET = FIFO_WR_N_bm;
 701               	.LM35:
 702 004e 8583      		std Z+5,r24
 703               	.L6:
 704 0050 0895      		ret
 705               	.LBE5:
 706               	.LBE4:
 708               	.Lscope5:
 709               		.text
 711               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 fifo.c
     /tmp/cchdfYXB.s:2      *ABS*:0000003f __SREG__
     /tmp/cchdfYXB.s:3      *ABS*:0000003e __SP_H__
     /tmp/cchdfYXB.s:4      *ABS*:0000003d __SP_L__
     /tmp/cchdfYXB.s:5      *ABS*:00000034 __CCP__
     /tmp/cchdfYXB.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cchdfYXB.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cchdfYXB.s:444    .text.fifo_init:00000000 fifo_init
     /tmp/cchdfYXB.s:474    .text.fifo_deinit:00000000 fifo_deinit
     /tmp/cchdfYXB.s:510    .text.fifo_cur_char:00000000 fifo_cur_char
     /tmp/cchdfYXB.s:566    .text.fifo_send_char:00000000 fifo_send_char
     /tmp/cchdfYXB.s:635    .text.fifo_send_char_blocking:00000000 fifo_send_char_blocking

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
