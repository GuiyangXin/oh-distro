package drc;
// info we have: 
//  affordance, 
//  robot link,
//  type of contact (offset, touch, force closure), 
//  [offset position/orientation], 
//  expected beginning time, 
//  expected end time,
//  sequence of actions,
//  type of ordering (hard, simultaneous, no ordering, priority),
//  whether constraint has been relaxed


struct contact_goal_t
{
  int64_t utime;
  string object_1_name;
  string object_1_contact_grp;

  string object_2_name; // not used for ON_GROUND_PLANE
  string object_2_contact_grp; // not used for ON_GROUND_PLANE

  double lower_bound_completion_time;
  double upper_bound_completion_time;

  int32_t contact_type;

  vector_3d_t target_pt; // only used for ON_GROUND_PLANE
                  
  double x_offset_lower;
  double y_offset_lower;        
  double z_offset_lower;        
  int32_t x_relation_lower;
  int32_t y_relation_lower;
  int32_t z_relation_lower;

  double x_offset_upper;
  double y_offset_upper;        
  double z_offset_upper;        
  int32_t x_relation_upper;
  int32_t y_relation_upper;
  int32_t z_relation_upper;

  // int32_t num_robot_contact_pts;
  // vector_3d_t robot_contact_pts[num_robot_contact_pts]; // in the frame of link_name
  // vector_3d_t ground_plane_pts[num_robot_contact_pts];
  // double ground_plane_radii[num_robot_contact_pts];

  const int32_t WITHIN_REGION           = 0;
  const int32_t SUPPORTED_WITHIN_REGION = 1;
  const int32_t FORCE_CLOSURE           = 2;
  const int32_t COLLISION_AVOIDANCE     = 3;

  const int32_t REL_EQUAL          = 0;
  const int32_t REL_LESS_THAN      = 1;
  const int32_t REL_GREATER_THAN   = 2; 
  const int32_t UNDEFINED          = 3;
}


