package drc;

// modeled after the DRCSIM JointCommand ROS message
// This structure contains the gains to be applied to a joint.
// The controller is a PID with feedforward desired torque:
//
//   kp_position     * ( position - measured_position )       +
//   ki_position     * 1/s * ( position - measured_position ) +
//   kd_position     * s * ( position - measured_position ) +
//   kp_velocity     * ( velocity - measured_velocity )     +
//   effort

struct joint_command_t 
{
    int64_t utime;
    string robot_name;
    int32_t num_joints;
    
    string name [num_joints];
    double position [num_joints];
    double velocity [num_joints];
    double effort [num_joints];

    double kp_position [num_joints];
    double ki_position [num_joints];
    double kd_position [num_joints];
    double kp_velocity [num_joints];

    double i_effort_min [num_joints];
    double i_effort_max [num_joints];
}

