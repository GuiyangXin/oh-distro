package drc;

/* 
 * modeled after the DRCSIM AtlasCommand ROS message, but updated for the atlas hardware API,
 * and separated out for an individual joint.
 *
 * control parameter spec:
 *  
 *   q, qd, f are sensed position, velocity, torque, from AtlasJointState
 *
 *   q_d, qd_d, f_d are desired position, velocity, torque, from
 *   AtlasJointDesired
 *
 *   The final joint command will be:
 *
 *    k_q_p   * ( q_d - q )     +
 *    k_q_i   * 1/s * ( q_d - q ) +
 *    k_qd_p  * ( qd_d - qd )   +
 *    k_f_p   * ( f_d - f )     +
 *    ff_qd   * qd        +
 *    ff_qd_d   * qd_d        +
 *    ff_f_d  * f_d         +
 *    ff_const
 */

struct joint_command_t
{
  int64_t utime;
  
  string joint_name;

  double position;
  double velocity;
  double effort;

  double k_q_p; // corresponds to kp_position in drcsim API
  double k_q_i; // corresponds to ki_position in drcsim API
  double k_qd_p; // corresponds to kp_velocity in drcsim API
  double k_f_p;
  double ff_qd; // maps to kd_position in drcsim API (there isnt an equivalent gain in the bdi api)
  double ff_qd_d;
  double ff_f_d;
  double ff_const;
}

