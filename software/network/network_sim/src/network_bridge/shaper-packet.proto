import "goby/acomms/protobuf/dccl_option_extensions.proto";

package drc;

message ShaperHeader
{
  option (dccl.msg).max_bytes = 10;
  option (dccl.msg).id = 0xD4C0001;
  required int32 channel = 1 [(dccl.field).min = 0,
                              (dccl.field).max = 127];
  required int32 priority = 2 [(dccl.field).min = 0,
                               (dccl.field).max = 7];
  optional int32 message_number = 3 [(dccl.field).min = 0,
                                     (dccl.field).max = 15,
                                     (dccl.field).codec = "presence_bit"];
  optional uint32 fragment = 4 [(dccl.field).min = 0,
                                (dccl.field).max = 0xFFFFF,
                                (dccl.field).codec = "presence_bit"]; // 1 Megabyte
  required bool is_last_fragment = 5;
  optional uint32 message_size = 10 [(dccl.field).min = 0,
                                     (dccl.field).max = 0xFFFFF]; // 1 Megabyte
  optional double sent_millisec = 11 [(dccl.field).min = 0,
                                      (dccl.field).max = 2540,
                                      (dccl.field).precision = -1];
}

message ShaperPacket
{
  required ShaperHeader header = 1; // DCCL encoded ShaperHeader
  required bytes data = 2; // fragment of message
}

