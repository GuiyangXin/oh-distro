import "goby/acomms/protobuf/dccl_option_extensions.proto";
import "robot-state-analogs.proto";

package drc;

message MinimalRobotPlan
{
  option (dccl.msg).max_bytes = 20000;
  option (dccl.msg).id = 0xD4C0006;
  
  required uint64 utime = 1 [(dccl.field) = { min: 0 max: 3600e6 }];

  required MinimalRobotState goal = 2;
  required MinimalRobotStateDiff goal_diff = 3;

  required int32 num_grasp_transitions = 10 [(dccl.field) = { min: 0  max: 10 }];
  repeated GraspTransition grasp = 11 [(dccl.field) = { max_repeat: 10 }];
  
  required int32 left_arm_control_type = 20 [(dccl.field) = { min: 0  max: 4 }];
  required int32 right_arm_control_type = 21 [(dccl.field) = { min: 0  max: 4 }];
  required int32 left_leg_control_type = 22 [(dccl.field) = { min: 0  max: 4 }];
  required int32 right_leg_control_type = 23 [(dccl.field) = { min: 0  max: 4 }];

}

message GraspTransition
{
  optional uint64 utime = 1 [(dccl.field) = { min: 0 max: 3600e6 codec: "presence_bit"}];
  optional int32 affordance_uid = 2 [(dccl.field) = {min: 0 max: 0x7FFFFFFE codec: "presence_bit"} ];
  optional Position3D hand_pose = 3;
  
  required bool grasp_on = 4;
  optional int32 grasp_type = 5 [(dccl.field) = {min:0 max: 1 codec: "presence_bit"}];
  required bool power_grasp = 6;
    
  repeated float joint_position = 7 [(dccl.field) = { min: -3.14 max: 3.14 precision: 2 max_repeat: 12 codec: "presence_bit" } ];
}
