group "0.development" {
    cmd "robot_deputy" {
        exec = "bot-procman-deputy -n robot";
        host = "localhost";
    }
    cmd "base_deputy" {
        exec = "bot-procman-deputy -n base";
        host = "localhost";
    }
}
group "a.0.drivers" {
    cmd "sa-left" {
        exec = "ptgrey-gige -t -f 2 -q 50 -c CAMERACHEST_LEFT -s 12502221 -r 270";
        host = "robot";
    }
    cmd "sa-right" {
        exec = "ptgrey-gige -t -f 2 -q 50 -c CAMERACHEST_RIGHT -s 12502233 -r 90";
        host = "robot";
    }
    cmd "webcam audio server" {
        exec = "drc-webcam-audio-server";
        host = "robot";
    }
    cmd "multisense" {
        exec = "drc-multisense -o 3";
        host = "robot";
    }
    cmd "atlas-off" {
        exec = "drc-atlas -p off";
        host = "robot";
    }
    cmd "atlas-high" {
        exec = "drc-atlas -p high";
        host = "robot";
    }
    cmd "logger-robot" {
        exec = "drc-lcm-logger.sh robot";
        host = "robot";
    }
}


# must be individually launched as per hardware setup
group "a.0.hand_drivers" {
    cmd "aa-ros2lcm-hands" {
        exec = "roslaunch --wait translators hands_notsim.launch";
        host = "robot";
    }
    cmd "irobot-right" {
        exec = "roslaunch --wait mit_helios_scripts irobot_hand.launch side:=r hand_id:=41";
        host = "robot";
    }
    cmd "irobot-left" {
        exec = "roslaunch --wait mit_helios_scripts irobot_hand.launch side:=l hand_id:=34";
        host = "robot";
    }
    cmd "robotiq-right" {
        exec = "robotiq_tcp_node RIGHT 192.168.40.101";
        host = "robot";
    }
    cmd "robotiq-left" {
        exec = "robotiq_tcp_node LEFT 192.168.40.101";
        host = "robot";
    }
    cmd "robotiq-status2state" {
        exec = "robotiq_status2state";
        host = "robot";
    }
}

group "a.1.core" {
    cmd "spin-lidar" {
        exec = "spin-lidar-command";
        host = "robot";
    }
    cmd "roscore" {
        exec = "roscore";
        host = "robot";
    }
    cmd "aa-sync" {
        exec = "drc-state-sync -b -e";
        host = "robot";
    }
    cmd "viewer" {
        exec = "drc-viewer";
        host = "robot";
    }
    cmd "pserver" {
        exec = "bot-param-server $DRC_BASE/software/config/drc_robot_02.cfg";
        host = "robot";
    }
    cmd "aff_server" {
        exec = "affordance_server  -r robot";
        host = "robot";
    }
    cmd "j2f" {
        exec = "drc-joints2frames -g -b";
        host = "robot";
    }
    cmd "maps-server" {
        exec = "maps-server";
        host = "robot";
    }
    cmd "maps-registrar" {
        exec = "maps-registrar";
        host = "robot";
    }
    cmd "lidar-passthrough" {
        exec = "drc-lidar-passthrough -c 0.06";
        host = "robot";
    }
    cmd "image-tx" {
        exec = "drc-image-transmit";
        host = "robot";
    }
    cmd "data-request-server" {
        exec = "data-request-server";
        host = "robot";
    }
    cmd "utime-publisher" {
        exec = "drc-utime-publisher -f 0";
        host = "robot";
    }
    cmd "drc-frequency" {
        exec = "drc-frequency";
        host = "robot";
    }
    cmd "printf-cache" {
        exec = "drc-printf-cache";
        host = "robot";
    }
}

group "a.2.p_and_c" {
    cmd "BotBDIStepTranslator" {
        exec = "drc-bdi-step-translator";
        host = "robot";
    }
    cmd "AtlasManipController" {
        exec = "matlab -nosplash -nodesktop -r \"addpath_control; runAtlasStateMachine;\"";
        host = "robot";
        stop_signal = 15;
    }
    cmd "EncoderCalibration" {
        exec = "matlab -nosplash -nodesktop -r \"addpath_control; calibrateAtlasArmEncoders(true);\"";
        host = "robot";
        stop_signal = 15;
    }
    cmd "NeckPitchControl" {
        exec = "drc-neck-control";
        host = "robot";
        stop_signal = 15;
    }
}

group "a.3.models" {   
    cmd "model_LR_RR" {
        exec = "robot_model_publisher -u $DRC_BASE/software/models/mit_gazebo_models/mit_robot/model_LR_RR.urdf";
        host = "robot";
    }
    cmd "model_LH_RH" {
        exec = "robot_model_publisher -u $DRC_BASE/software/models/mit_gazebo_models/mit_robot/model_LH_RH.urdf";
        host = "robot";
    }
    cmd "model_LP_RP" {
        exec = "robot_model_publisher -u $DRC_BASE/software/models/mit_gazebo_models/mit_robot/model_LP_RP.urdf";
        host = "robot";
    }
    cmd "model_LI_RI" {
        exec = "robot_model_publisher -u $DRC_BASE/software/models/mit_gazebo_models/mit_robot/model_LI_RI.urdf";
        host = "robot";
    }
}

group "b.1.core" {
    cmd "base_viewer" {
        exec = "drc-viewer -c drc_robot_02.cfg"; 
        host = "base";
    }
    cmd "aff_server" {
        exec = "affordance_server -r base";
        host = "base";
    }
    cmd "maps-affordance-updater" {
        exec = "maps-affordance-updater";
        host = "base";
    }
    cmd "j2f" {
        exec = "drc-joints2frames -g -b";
        host = "base";
    }
    cmd "param_server" {
        exec = "bot-param-server $DRC_BASE/software/config/drc_robot_02.cfg";
        host = "base";
    }
    cmd "image-rx" {
        exec = "drc-image-receive";
        host = "base";
    }
    cmd "image-anaglyph" {
        exec = "drc-image-anaglyph";
        host = "base";
    }
    cmd "logger-base" {
        exec = "drc-lcm-logger.sh base";
        host = "base";
    }
    cmd "printf-request" {
        exec = "drc-printf-request";
        host = "base";
    }
}


group "b.2.p_and_c" {
    cmd "FootstepPlanner" {
       exec = "matlab -nosplash -nodesktop -r \"addpath_control; cd([getenv('DRC_PATH'),'/control/matlab/planners/footstep_planner']); runFootstepPlanner;\"";
       host = "base";
       stop_signal = 15;
    }
    cmd "BaseBDIStepTranslator" {
       exec = "drc-bdi-step-translator -b";
       host = "base";
    }
    cmd "ReachingPlanner" {
       exec = "matlab -nosplash -nodesktop -r \"addpath_control; cd([getenv('DRC_PATH'),'/control/matlab/planners/atlas_keyframe_planners']); runKeyFramePlannersLCMBase(2);\"";
       host = "base";
       stop_signal = 15;
    }
    cmd "GazePlanner" {
       exec = "matlab -nosplash -nodesktop -r \"addpath_control; cd([getenv('DRC_PATH'),'/control/matlab/planners']); runPalmGazePlanner();\"";
       host = "base";
       stop_signal = 15;
    }
}


group "b.2.p_and_c_retired" {
    cmd "sticky_hands" {
       exec = "matlab -nosplash -nodesktop -r \"addpath_control; cd([getenv('DRC_PATH'),'/control/matlab/planners/sticky_hands']); runGraspSynthesisPoolServer(2);\"";
       host = "base";
       stop_signal = 15;
    }
    cmd "ValvePlanner" {
       exec = "matlab -nosplash -nodesktop -r \"addpath_control; cd([getenv('DRC_PATH'),'/control/matlab/planners']); runValveTaskMain();\"";
       host = "base";
       stop_signal = 15;
    }
    cmd "DrillPlanner" {
       exec = "matlab -nosplash -nodesktop -r \"addpath_control; cd([getenv('DRC_PATH'),'/control/matlab/planners']); runDrillTaskMain();\"";
       host = "base";
       stop_signal = 15;
    }
    cmd "DrillTracker" {
       exec = "matlab -nosplash -nodesktop -r \"addpath_control; cd([getenv('DRC_PATH'),'/control/matlab/planners']); drillPositionTracker();\"";
       host = "base";
       stop_signal = 15;
    }
    cmd "LadderPlanner" {
       exec = "matlab -nodisplay -r \"addpath_control; cd([getenv('DRC_PATH'),'/control/matlab/planners/ladder_planner']); LadderPlanner;\"";
       host = "base";
       stop_signal = 15;
    }
    cmd "LadderHandPlanner" {
       exec = "matlab -nodisplay -r \"addpath_control; cd([getenv('DRC_PATH'),'/control/matlab/planners/ladder_planner']); runLadderHandPlanner;\"";
       host = "base";
       stop_signal = 15;
    }
}

group "b.3.models" {
    cmd "base_model_LR_RR" {
        exec = "robot_model_publisher -u $DRC_BASE/software/models/mit_gazebo_models/mit_robot/model_LR_RR.urdf";
        host = "base";
    }
    cmd "base_model_LH_RH" {
        exec = "robot_model_publisher -u $DRC_BASE/software/models/mit_gazebo_models/mit_robot/model_LH_RH.urdf";
        host = "base";
    }
    cmd "base_model_LP_RP" {
        exec = "robot_model_publisher -u $DRC_BASE/software/models/mit_gazebo_models/mit_robot/model_LP_RP.urdf";
        host = "base";
    }
    cmd "base_model_LI_RI" {
        exec = "robot_model_publisher -u $DRC_BASE/software/models/mit_gazebo_models/mit_robot/model_LI_RI.urdf";
        host = "base";
    }
}

group "m.simple_grasping" {
    cmd "affordance_to_grasp_plan" {
        exec = "affordance_to_grasp_plan";
        host = "base";
    }
    cmd "fake-grasp-pool" {
        exec = "drc-fake-grasp-pool";
        host = "base";
    }
    cmd "hand_cloud" {
        exec = "hand_cloud";
        host = "base";
    }
    cmd "affordance_draw_with_plan" {
        exec = "affordance_draw_with_plan -l";
        host = "base";
    }
}

group "m.misc" {
    cmd "vicon" {
        exec = "vicon-client 192.168.10.1";
        host = "robot";
    }
    cmd "state-estimate" {
        exec = "state_estimate -x";
        host = "robot";
    }
    cmd "MatlabEKF" {
        exec = "matlab -nosplash -nodesktop -r \"setup_datafusion; dataFusionHandler;\"";
        host = "robot";
        stop_signal = 15;
    }
}


group "m.state_est" {
    cmd "state-sync-bdi" {
        exec = "drc-state-sync -b -e -o EST_ROBOT_STATE_BDI -p";
        host = "robot";
    }
    cmd "state-sync-mit" {
        exec = "drc-state-sync -e -o EST_ROBOT_STATE";
        host = "robot";
    }
    cmd "viewer-plus" {
        exec = "drc-viewer -a";
        host = "robot";
    }
    cmd "viewer-plus" {
        exec = "se-fusion -U model_LH_RH.urdf -P drc_robot_02.cfg";
        host = "robot";
    }
}

#################################################################

script "prep_core" { 
    start group "0.development";
    start cmd "logger-robot";
    start group "a.1.core";
    start group "a.2.p_and_c";
    start group "b.2.p_and_c";
    start cmd "atlas-off";
    start cmd "multisense";
    start cmd "sa-right";
    start cmd "sa-left";
}

script "prep_LR_RR" { 
    start cmd "model_LR_RR";
    start cmd "base_model_LR_RR";
    run_script "prep_core";
    start cmd "robotiq-right";
    start cmd "robotiq-status2state";
}

script "prep_LH_RH" {
    start cmd "model_LH_RH";
    start cmd "base_model_LH_RH";
    run_script "prep_core";
}

script "prep_LP_RP" {
    start cmd "model_LP_RP";
    start cmd "base_model_LP_RP";
    run_script "prep_core";
}

script "prep_LI_RI" { 
    start cmd "model_LI_RI";
    start cmd "base_model_LI_RI";
    run_script "prep_core";
    start cmd "aa-ros2lcm-hands";
    start cmd "irobot-left";
    start cmd "irobot-right";
}

script "simple_grasp" {
    stop cmd "sticky_hands";
    start group "m.simple_grasping";
}

script "robot_start" { 
    stop cmd "atlas-off";
    wait ms 2000;
    start cmd "atlas-high";
}

script "kill_calibration_process" { 
    stop cmd "EncoderCalibration";
}

script "launch_state_est" { 
    stop cmd "aa-sync";
    stop cmd "viewer";
    wait ms 1000;
    start group "m.state_est";
}
