
network {
  udp_frame_size_bytes=1024;
  target_rate_bps=10000000; # set to 10Mbps (essentially non-restrictive) 
  channel_buffer_size=100;
  expected_packet_loss_percent=5;
  # Joint names to be paired with joint angles - eventually this will be taken care of by goby
  # NB: keep this in sync with the angles coming from Gazebo as OSFR like to change them to keep us on our toes!
  joint_names=["back_bkz", "back_bky", "back_bkx", "neck_ay", "l_leg_hpz", "l_leg_hpx", "l_leg_hpy", 
              "l_leg_kny", "l_leg_aky", "l_leg_akx", "r_leg_hpz", "r_leg_hpx", "r_leg_hpy", "r_leg_kny", 
              "r_leg_aky", "r_leg_akx", "l_arm_usy", "l_arm_shx", "l_arm_ely", "l_arm_elx", "l_arm_uwy", 
              "l_arm_mwx", "r_arm_usy", "r_arm_shx", "r_arm_ely", "r_arm_elx", "r_arm_uwy", "r_arm_mwx", 
              "hokuyo_joint", "left_f0_j0", "left_f0_j1", "left_f0_j2", "left_f1_j0", "left_f1_j1", "left_f1_j2", 
              "left_f2_j0", "left_f2_j1", "left_f2_j2", "left_f3_j0", "left_f3_j1", "left_f3_j2", "right_f0_j0", 
              "right_f0_j1", "right_f0_j2", "right_f1_j0", "right_f1_j1", "right_f1_j2", "right_f2_j0", "right_f2_j1", 
              "right_f2_j2", "right_f3_j0", "right_f3_j1", "right_f3_j2"];
  robot {
      udp_host="172.19.5.2"; # Field Computer 1
      udp_port=9000;
  }
  base {
      udp_host="172.19.5.1"; # Main OCU
      udp_port=9001;
  }

  manipulation {
    robot_to_base {
      channels_a=["CAMERA_LEFT_TX","CAMERALHAND_LEFT_TX", "CAMERARHAND_LEFT_TX", 
                  "MAP_OCTREE","MAP_CLOUD","MAP_DEPTH","MAP_CATALOG",
                  "PMD_INFO","PMD_INFO2","PMD_PRINTF",
                  "SYSTEM_STATUS",
                  "AFFORDANCE_PLUS_BASE_OVERWRITE","PMD_PRINTF_REPLY"];
      frequency_a=0.0;
      channels_b=["ROBOT_UTIME", "FREQUENCY_LCM", "ATLAS_STATUS"];
      frequency_b=1.0;
      channels_c=["EST_ROBOT_STATE","CONTROLLER_STATUS"];
      frequency_c=4.0;
    }

    base_to_robot {
      channels_a=["MAP_REQUEST","SENSOR_REQUEST",
                  "COMMITTED_FOOTSTEP_PLAN","PMD_ORDERS","PMD_ORDERS2","DATA_REQUEST",
                  "COMMITTED_ROBOT_PLAN","COMMITTED_GRASP",
                  "AFFORDANCE_PLUS_BOT_OVERWRITE","GAZE_COMMAND",
                  "DESIRED_NECK_PITCH","SIMPLE_GRASP_COMMAND",
                  "COMMITTED_MANIP_GAIN","COMMITTED_POSTURE_PRESET",
                  "PMD_PRINTF_REQUEST", "COMMITTED_PLAN_PAUSE","RECOVERY_CMD",
                  "COMMITTED_EE_ADJUSTMENT", "CONTROLLER_MODE", "MAP_CONTROLLER_COMMAND",
                  "COMMITTED_MANIP_MAP","MOTIONEST_REQUEST", "STOP_WALKING",
                  "MULTISENSE_COMMAND", "MAP_REQUEST_BBOX",
                  "IROBOT_LEFT_SIMPLE_GRASP", "IROBOT_RIGHT_SIMPLE_GRASP", 
                  "SANDIA_LEFT_SIMPLE_GRASP", "SANDIA_RIGHT_SIMPLE_GRASP", 
                  "ATLAS_BEHAVIOR_COMMAND", "ATLAS_MANIPULATE_PARAMS"];
      frequency_a=0.0;
      channels_b=[];
      frequency_b=[1.0];
      channels_c=[];
      frequency_c=[1.0];
    }  
  }
}

frequency_tool {
    LCM { # must be caps | channels_short must be 4 chars
        #NBNBNB: dont change this list - its hard coded for easy transmission from robot to base
        channels       = ["EST_ROBOT_STATE","ATLAS_COMMAND","CAMERA","CAMERA_LHAND","CAMERA_RHAND","SCAN"];
        channels_short = ["ERS "           ,"ACOM"         ,"HEAD"  ,"LEFT"        ,"RGHT"        ,"SCAN"]; 
    }
}

driving {
    control {
        lookahead_distance_default = 11.0;
        kp_steer_default = 6.0;
    }
}

viewer {
  renderer_groups {
    manipulation {
      name="Manipulation";
      enabled=["BOT_FRAMES","Grid", "Maps", "Robot State Display","Robot Plan Display", "Data Control",
          "Affordances & StickyHands/Feet", "Collections" ];
    }

    walking {
      name="Walking";
      enabled=[ "BOT_FRAMES","Grid", "Maps", "Robot State Display","Robot Plan Display", "Data Control", "Walking",
          "Footstep Plans & Stick Feet" ];
    }
  }
}
