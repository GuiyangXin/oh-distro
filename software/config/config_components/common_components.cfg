
network {
  udp_frame_size_bytes=1024;

  # Testing:
  target_rate_bps=10000000; # set to 10Mbps (essentially non-restrictive) 
  #disable_pmd_custom_codecs = true;
  #disable_ers_custom_codecs = true;
  #disable_robot_plan_custom_codecs=true;

  #target_rate_bps=1000000; # set to 1Mbps (a little restrictive) 
  disable_pmd_custom_codecs = false;
  disable_ers_custom_codecs = true;
  disable_robot_plan_custom_codecs= true;

  # Competition:
  target_rate_bps=95000; # set to 95kbps - competition (should be same as throughput_bps below for 250 ms latency case)
  fallback_seconds=50; # after these number of seconds at a rate other than the target_rate_bps (i.e. set adaptively for lower latency/higher throughput case), set back to target_rate_bps
  disallow_rate_change_seconds=15;

  #disable_pmd_custom_codecs = false; #Procman custom compression
  #disable_ers_custom_codecs = false; #EST_ROBOT_STATE custom compression
  #disable_robot_plan_custom_codecs= false;

  #latency=[50, 500];
  #throughput_bps=[950000, 95000];

  expected_packet_loss_percent=5;

  robot {
      udp_host="172.19.5.2"; # Field Computer 1
      udp_port=9000;
  }
  base {
      udp_host="172.19.5.2"; # Main OCU
      udp_port=9001;
  }

  robot_to_base {
      ########################################
      channels_a=["FOOTSTEP_PLAN_RESPONSE", "DRAKE_VIEWER_DRAW", "DRAKE_VIEWER_LOAD_ROBOT"];
      frequency_a=0.0;
      buffer_size_a=1;
      priority_a=0;

      ########################################
      channels_b=["PMD_INFO2"];
      frequency_b=0.0;
      buffer_size_b=10;
      priority_b=0;

      ########################################
      channels_c=[];
      frequency_c=1.0;
      buffer_size_c=1;
      priority_c=0;

      ########################################
      channels_d=["EST_ROBOT_STATE"];
      frequency_d=4.0;
      buffer_size_d=1;
      priority_d=2;
    }

    base_to_robot {
      ########################################
      channels_a=["PMD_ORDERS2"];
      frequency_a=0.0;
      buffer_size_a=10;
      priority_a=1;

      ########################################
      channels_b=["FOOTSTEP_PLAN_REQUEST", "WALKING_SIMULATION_DRAKE_REQUEST"];
      frequency_b=0.0;
      buffer_size_b=1;
      priority_b=0;

      ########################################
      channels_c=[];
      frequency_c=[1.0];
      buffer_size_c=1;
      priority_c=0;

      ########################################
      channels_d=[];
      frequency_d=[1.0];
      buffer_size_d=1;
      priority_d=0;
    }  
}

frequency_tool {
    LCM { # must be caps | channels_short must be 4 chars
        #NBNBNB: dont change this list - its hard coded for easy transmission from robot to base
        channels       = ["EST_ROBOT_STATE","ATLAS_COMMAND","CAMERA","SCAN"];
        channels_short = ["ERS "           ,"ACOM"         ,"HEAD"  ,"SCAN"]; 
    }
}

driving {
    control {
        lookahead_distance_default = 11.0;
        kp_steer_default = 6.0;
    }
}

viewer {
  renderer_groups {
    manipulation {
      name="Manipulation";
      enabled=["BOT_FRAMES","Grid", "Maps", "Robot State Display","Robot Plan Display", "Data Control",
          "Affordances & StickyHands/Feet", "Collections" ];
    }

    walking {
      name="Walking";
      enabled=[ "BOT_FRAMES","Grid", "Maps", "Robot State Display","Robot Plan Display", "Data Control", "Walking",
          "Footstep Plans & Stick Feet" ];
    }
  }

  datacontrol_presets {

    all {
      label = "All";
      Camera_Head     { enable = 1;  period = 1;  quality = 1; }
      Camera_L_Chest  { enable = 1;  period = 1;  quality = 1; }
      Camera_R_Chest  { enable = 1;  period = 1;  quality = 1; }
      Scene_Height    { enable = 1;  period = 1; }
      Scene_Depth     { enable = 1;  period = 1; }
      Workspace_Depth { enable = 1;  period = 1;  fov = 90;  yaw = 0; }
    }

    camera_only {
      label = "Camera Only";
      Camera_Head     { enable = 1;  period = 1;  quality = 1; }
      Camera_L_Chest  { enable = 0;  period = 0;  quality = 1; }
      Camera_R_Chest  { enable = 0;  period = 0;  quality = 1; }
      Scene_Height    { enable = 0;  period = 0; }
      Scene_Depth     { enable = 0;  period = 0; }
      Workspace_Depth { enable = 0;  period = 0; }
    }

    camera_lidar {
      label = "Camera + Hi Lidar";
      Camera_Head     { enable = 1;  period = 1;  quality = 1; }
      Camera_L_Chest  { enable = 1;  period = 5;  quality = 1; }
      Camera_R_Chest  { enable = 1;  period = 5;  quality = 1; }
      Scene_Height    { enable = 0;  period = 0; }
      Scene_Depth     { enable = 0;  period = 0; }
      Workspace_Depth { enable = 1;  period = 1; }
    }

    camera_low_lidar {
      label = "Camera + Low Lidar";
      Camera_Head     { enable = 1;  period = 1;  quality = 1; }
      Camera_L_Chest  { enable = 1;  period = 5;  quality = 1; }
      Camera_R_Chest  { enable = 1;  period = 5;  quality = 1; }
      Scene_Height    { enable = 0;  period = 0; }
      Scene_Depth     { enable = 0;  period = 0; }
      Workspace_Depth { enable = 1;  period = 5; }
    }
  }
}

perception {

  # tag ids and locations relative to particular robot links
  fiducial_tags {

    robotiq_left_001 {
      id = 1;
      link = "l_hand_force_torque";
      xyzrpy = [ 0.0599, 0.0446, -0.0026, 69.4973, 79.7274, 60.1646 ];
    }

    robotiq_left_002 {
      id = 2;
      link = "l_hand_force_torque";
      xyzrpy = [ -0.0595, 0.0443, 0.0023, 69.3396, -78.8230, -59.2247 ];
    }

    robotiq_left_003 {
      id = 3;
      link = "l_hand_force_torque";
      xyzrpy = [ 0.0003, 0.0763, -0.0630, -179.8958, 0.3253, -144.4595 ];
    }

    robotiq_left_004 {
      id = 4;
      link = "l_hand_force_torque";
      xyzrpy = [ 0.0010, 0.0658, 0.0628, -0.0265, 0.1304, -0.0000 ];
    }

    robotiq_right_001 {
      id = 5;
      link = "r_hand_force_torque";
      xyzrpy = [ 0.0599, 0.0446, -0.0026, 69.4973, 79.7274, 60.1646 ];
    }

    robotiq_right_002 {
      id = 6;
      link = "r_hand_force_torque";
      xyzrpy = [ -0.0595, 0.0443, 0.0023, 69.3396, -78.8230, -59.2247 ];
    }

    robotiq_right_003 {
      id = 7;
      link = "r_hand_force_torque";
      xyzrpy = [ 0.0003, 0.0763, -0.0630, -179.8958, 0.3253, -144.4595 ];
    }

    robotiq_right_004 {
      id = 8;
      link = "r_hand_force_torque";
      xyzrpy = [ 0.0010, 0.0658, 0.0628, -0.0265, 0.1304, -0.0000 ];
    }

  }

}
