coordinate_frames {
  root_frame = "local";

  global {
      relative_to = "local";
      history = 1000;
      update_channel = "GLOBAL_TO_LOCAL";
      initial_transform {
          translation = [0, 0, 0 ];
          quat = [1, 0, 0, 0];
      }
  }

  head {
    relative_to = "local";
    history = 1000;                       
    pose_update_channel= "POSE_HEAD";
    initial_transform{
      translation=[  0 , 0.0 , 0.0 ];
      rpy = [0.0 , 0.0 , 0.0 ];
    }
  }    
  
  body {
    relative_to = "head";
    history = 1000;
    update_channel = "HEAD_TO_BODY";  
    initial_transform{
      translation = [ 0, 0, 0 ];
      quat = [ 1, 0, 0, 0 ];
    }
  }
  
  ################## Sensor Frames ###################################
  CAMERA {
    # this cannot change - its rigid
    relative_to = "head";
    history = 1000;
    update_channel = "HEAD_TO_LEFT_CAMERA_OPTICAL_FRAME";
    initial_transform{
      # location of left camera:
      # i dont think .....78242 is taken care of the URDF transforms...
      translation = [ 0.0, 0.035078242, -0.002];
      rpy = [ -90.0, 0.0, -90.0];      
    }
  }  
  
  ## continously rotating link:
  #hokuyo_link {
  #  relative_to = "head";
  #  history = 1000;                       
  #  update_channel = "HEAD_TO_HOKUYO_LINK";
  #  initial_transform{
  #    translation=[  -0.0446 , 0.0 , 0.0880 ];
  #    rpy = [0.0 , 0.0 , 0.0 ];
  #  }
  #}  

  SCAN {
    relative_to = "CAMERA";
    history = 1000;                       
    #update_channel = "HOKUYO_LINK_TO_HEAD_HOKUYO";
    update_channel = "CAMERA_TO_SCAN";    
    initial_transform{
      translation=[  0.03 , 0.0 , 0.015 ];
      rpy = [0.0 , 0.0 , 0.0 ];
    }
  }  


  SCAN_URDF {
    relative_to = "CAMERA";
    history = 1000;                       
    #update_channel = "HOKUYO_LINK_TO_HEAD_HOKUYO";
    update_channel = "CAMERA_TO_SCAN_URDF";    
    initial_transform{
      translation=[  0.03 , 0.0 , 0.015 ];
      rpy = [0.0 , 0.0 , 0.0 ];
    }
  }  
  
  
  # this shouldn't be necessary but it makes using bot_frames
  # easier than having to read planar_lidar too
  SCAN_FREE {
    relative_to = "SCAN";
    history = 1000;                       
    update_channel = "HOKUYO_LINK_TO_HOKUYO_LINK_FREE";
    initial_transform{
      translation=[  0.0 , 0.0 , 0.0 ];
      rpy = [0.0 , 0.0 , 0.0 ];
    }
  }  



  #CAMERARIGHT {
  #  relative_to = "head";
  #  history = 1000;
  #  update_channel = "HEAD_TO_RIGHT_CAMERA_OPTICAL_FRAME"; 
  #  initial_transform{
  #    translation = [0.0, -0.035078242, -0.002];
  #    rpy = [ -90.0, 0.0, -90.0];
  #  }
  #}   
  

  CAMERA_FUSED {
    # this cannot change - its rigid
    relative_to = "CAMERA";
    history = 1000;
    update_channel = "CAMER_TO_CAMERA_FUSED";
    initial_transform{
      # location of left camera:
      translation = [ 0.0, 0, 0];
      rpy = [ 0.0, 0.0, 0.0];
    }
  }

}




cameras {
    CAMERA {
      lcm_channel = "CAMERA";
      coord_frame = "CAMERA";
      type = "stereo";

      left {
          width = 1024;
          height= 544;
          distortion_model = "plumb";
          fx = 557.1886596679688;
          fy = 557.1886596679688;
          cx = 512.0;
          cy = 272.0;
          k1 = 0.0;
          k2 = 0.0;
          k3 = 0.0;
          p1 = 0.0;
          p2 = 0.0;
      }

      right {
          width = 1024;
          height= 544;
          distortion_model = "plumb";
          fx = 557.1886596679688;
          fy = 557.1886596679688;
          cx = 512.0;
          cy = 272.0;
          k1 = 0.0;
          k2 = 0.0;
          k3 = 0.0;
          p1 = 0.0;
          p2 = 0.0;
      }
      rotation = [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0];
      translation = [-0.0701564848423, 0.0, 0.0]; # taken from CRL's calibration
    }
}


planar_lidars {
  SCAN {
    viewer_color = [ 1.0, 0.0, 0.0 ]; # red
    max_range = 29.0;
    min_range = 0.1;
    frequency = 40;
    laser_type = "HOKUYO_UTM";
    coord_frame = "SCAN";
    lcm_channel = "SCAN";
    # defaults for laser_renderer
    surround_region = [0, 1e6];        
    up_region = [-1,-1];
    down_region = [-1, -1];
    max_range_free_dist = 29.0;
  }
  SCAN_FREE {
    viewer_color = [ 0.0, 0.0, 1.0 ]; # blue
    max_range = 29.0;
    min_range = 0.1;
    #angle_range = [135, -135];
    #down_region = [1068, 1078];
    up_region = [-1,-1];
    #surround_region = [0, 640];        
    frequency = 40;
    laser_type = "HOKUYO_UTM";
    coord_frame = "SCAN";
    lcm_channel = "SCAN_FREE";
    # defaults for laser_renderer
    surround_region = [0, 1e6];        
    up_region = [-1,-1];
    down_region = [-1, -1];
    max_range_free_dist = 29.0;
  }
}
